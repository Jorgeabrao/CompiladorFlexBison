Terminals unused in grammar

   REAL
   OP_ARITMETICO
   VIRGULA
   ERRO


Grammar

    0 $accept: programa $end

    1 programa: INICIOPROG args

    2 args: INICIOARGS listavars FIMARGS args
    3     | codigo

    4 codigo: INICIOVARS listavars FIMVARS restante
    5       | error

    6 listavars: LITERAL IDENTIFICADOR PONTO_E_VIRG listavars
    7          | INTEIRO IDENTIFICADOR PONTO_E_VIRG listavars
    8          | /* empty */

    9 restante: IDENTIFICADOR ATRIBUICAO LITERAL_CONST PONTO_E_VIRG restante
   10         | IDENTIFICADOR ATRIBUICAO NUMERO PONTO_E_VIRG restante
   11         | SE ABRE_PAR cond FECHA_PAR ENTAO restante FIMSE restante
   12         | ENQUANTO ABRE_PAR cond FECHA_PAR FACA restante FIMENQUANTO restante
   13         | ESCREVA LITERAL_CONST PONTO_E_VIRG restante
   14         | ESCREVA IDENTIFICADOR PONTO_E_VIRG restante
   15         | FIMPROG eof
   16         | /* empty */

   17 cond: IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR
   18     | NUMERO OP_RELACIONAL NUMERO
   19     | LITERAL_CONST OP_RELACIONAL LITERAL_CONST
   20     | NUMERO OP_RELACIONAL IDENTIFICADOR
   21     | LITERAL OP_RELACIONAL IDENTIFICADOR
   22     | IDENTIFICADOR OP_RELACIONAL NUMERO
   23     | IDENTIFICADOR OP_RELACIONAL LITERAL_CONST

   24 eof: FIM_DE_ARQ
   25    | error eof


Terminals, with rules where they appear

$end (0) 0
error (256) 5 25
INICIOPROG (258) 1
FIMPROG (259) 15
INICIOARGS (260) 2
FIMARGS (261) 2
INICIOVARS (262) 4
FIMVARS (263) 4
ESCREVA (264) 13 14
INTEIRO (265) 7
REAL (266)
LITERAL (267) 6 21
SE (268) 11
ENTAO (269) 11
FIMSE (270) 11
ENQUANTO (271) 12
FACA (272) 12
FIMENQUANTO (273) 12
IDENTIFICADOR (274) 6 7 9 10 14 17 20 21 22 23
NUMERO (275) 10 18 20 22
OP_RELACIONAL (276) 17 18 19 20 21 22 23
OP_ARITMETICO (277)
ATRIBUICAO (278) 9 10
ABRE_PAR (279) 11 12
FECHA_PAR (280) 11 12
LITERAL_CONST (281) 9 13 19 23
VIRGULA (282)
PONTO_E_VIRG (283) 6 7 9 10 13 14
FIM_DE_ARQ (284) 24
ERRO (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
programa (32)
    on left: 1, on right: 0
args (33)
    on left: 2 3, on right: 1 2
codigo (34)
    on left: 4 5, on right: 3
listavars (35)
    on left: 6 7 8, on right: 2 4 6 7
restante (36)
    on left: 9 10 11 12 13 14 15 16, on right: 4 9 10 11 12 13 14
cond (37)
    on left: 17 18 19 20 21 22 23, on right: 11 12
eof (38)
    on left: 24 25, on right: 15 25


state 0

    0 $accept: . programa $end

    INICIOPROG  shift, and go to state 1

    programa  go to state 2


state 1

    1 programa: INICIOPROG . args

    error       shift, and go to state 3
    INICIOARGS  shift, and go to state 4
    INICIOVARS  shift, and go to state 5

    args    go to state 6
    codigo  go to state 7


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 8


state 3

    5 codigo: error .

    $default  reduce using rule 5 (codigo)


state 4

    2 args: INICIOARGS . listavars FIMARGS args

    INTEIRO  shift, and go to state 9
    LITERAL  shift, and go to state 10

    $default  reduce using rule 8 (listavars)

    listavars  go to state 11


state 5

    4 codigo: INICIOVARS . listavars FIMVARS restante

    INTEIRO  shift, and go to state 9
    LITERAL  shift, and go to state 10

    $default  reduce using rule 8 (listavars)

    listavars  go to state 12


state 6

    1 programa: INICIOPROG args .

    $default  reduce using rule 1 (programa)


state 7

    3 args: codigo .

    $default  reduce using rule 3 (args)


state 8

    0 $accept: programa $end .

    $default  accept


state 9

    7 listavars: INTEIRO . IDENTIFICADOR PONTO_E_VIRG listavars

    IDENTIFICADOR  shift, and go to state 13


state 10

    6 listavars: LITERAL . IDENTIFICADOR PONTO_E_VIRG listavars

    IDENTIFICADOR  shift, and go to state 14


state 11

    2 args: INICIOARGS listavars . FIMARGS args

    FIMARGS  shift, and go to state 15


state 12

    4 codigo: INICIOVARS listavars . FIMVARS restante

    FIMVARS  shift, and go to state 16


state 13

    7 listavars: INTEIRO IDENTIFICADOR . PONTO_E_VIRG listavars

    PONTO_E_VIRG  shift, and go to state 17


state 14

    6 listavars: LITERAL IDENTIFICADOR . PONTO_E_VIRG listavars

    PONTO_E_VIRG  shift, and go to state 18


state 15

    2 args: INICIOARGS listavars FIMARGS . args

    error       shift, and go to state 3
    INICIOARGS  shift, and go to state 4
    INICIOVARS  shift, and go to state 5

    args    go to state 19
    codigo  go to state 7


state 16

    4 codigo: INICIOVARS listavars FIMVARS . restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 25


state 17

    7 listavars: INTEIRO IDENTIFICADOR PONTO_E_VIRG . listavars

    INTEIRO  shift, and go to state 9
    LITERAL  shift, and go to state 10

    $default  reduce using rule 8 (listavars)

    listavars  go to state 26


state 18

    6 listavars: LITERAL IDENTIFICADOR PONTO_E_VIRG . listavars

    INTEIRO  shift, and go to state 9
    LITERAL  shift, and go to state 10

    $default  reduce using rule 8 (listavars)

    listavars  go to state 27


state 19

    2 args: INICIOARGS listavars FIMARGS args .

    $default  reduce using rule 2 (args)


state 20

   15 restante: FIMPROG . eof

    error       shift, and go to state 28
    FIM_DE_ARQ  shift, and go to state 29

    eof  go to state 30


state 21

   13 restante: ESCREVA . LITERAL_CONST PONTO_E_VIRG restante
   14         | ESCREVA . IDENTIFICADOR PONTO_E_VIRG restante

    IDENTIFICADOR  shift, and go to state 31
    LITERAL_CONST  shift, and go to state 32


state 22

   11 restante: SE . ABRE_PAR cond FECHA_PAR ENTAO restante FIMSE restante

    ABRE_PAR  shift, and go to state 33


state 23

   12 restante: ENQUANTO . ABRE_PAR cond FECHA_PAR FACA restante FIMENQUANTO restante

    ABRE_PAR  shift, and go to state 34


state 24

    9 restante: IDENTIFICADOR . ATRIBUICAO LITERAL_CONST PONTO_E_VIRG restante
   10         | IDENTIFICADOR . ATRIBUICAO NUMERO PONTO_E_VIRG restante

    ATRIBUICAO  shift, and go to state 35


state 25

    4 codigo: INICIOVARS listavars FIMVARS restante .

    $default  reduce using rule 4 (codigo)


state 26

    7 listavars: INTEIRO IDENTIFICADOR PONTO_E_VIRG listavars .

    $default  reduce using rule 7 (listavars)


state 27

    6 listavars: LITERAL IDENTIFICADOR PONTO_E_VIRG listavars .

    $default  reduce using rule 6 (listavars)


state 28

   25 eof: error . eof

    error       shift, and go to state 28
    FIM_DE_ARQ  shift, and go to state 29

    eof  go to state 36


state 29

   24 eof: FIM_DE_ARQ .

    $default  reduce using rule 24 (eof)


state 30

   15 restante: FIMPROG eof .

    $default  reduce using rule 15 (restante)


state 31

   14 restante: ESCREVA IDENTIFICADOR . PONTO_E_VIRG restante

    PONTO_E_VIRG  shift, and go to state 37


state 32

   13 restante: ESCREVA LITERAL_CONST . PONTO_E_VIRG restante

    PONTO_E_VIRG  shift, and go to state 38


state 33

   11 restante: SE ABRE_PAR . cond FECHA_PAR ENTAO restante FIMSE restante

    LITERAL        shift, and go to state 39
    IDENTIFICADOR  shift, and go to state 40
    NUMERO         shift, and go to state 41
    LITERAL_CONST  shift, and go to state 42

    cond  go to state 43


state 34

   12 restante: ENQUANTO ABRE_PAR . cond FECHA_PAR FACA restante FIMENQUANTO restante

    LITERAL        shift, and go to state 39
    IDENTIFICADOR  shift, and go to state 40
    NUMERO         shift, and go to state 41
    LITERAL_CONST  shift, and go to state 42

    cond  go to state 44


state 35

    9 restante: IDENTIFICADOR ATRIBUICAO . LITERAL_CONST PONTO_E_VIRG restante
   10         | IDENTIFICADOR ATRIBUICAO . NUMERO PONTO_E_VIRG restante

    NUMERO         shift, and go to state 45
    LITERAL_CONST  shift, and go to state 46


state 36

   25 eof: error eof .

    $default  reduce using rule 25 (eof)


state 37

   14 restante: ESCREVA IDENTIFICADOR PONTO_E_VIRG . restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 47


state 38

   13 restante: ESCREVA LITERAL_CONST PONTO_E_VIRG . restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 48


state 39

   21 cond: LITERAL . OP_RELACIONAL IDENTIFICADOR

    OP_RELACIONAL  shift, and go to state 49


state 40

   17 cond: IDENTIFICADOR . OP_RELACIONAL IDENTIFICADOR
   22     | IDENTIFICADOR . OP_RELACIONAL NUMERO
   23     | IDENTIFICADOR . OP_RELACIONAL LITERAL_CONST

    OP_RELACIONAL  shift, and go to state 50


state 41

   18 cond: NUMERO . OP_RELACIONAL NUMERO
   20     | NUMERO . OP_RELACIONAL IDENTIFICADOR

    OP_RELACIONAL  shift, and go to state 51


state 42

   19 cond: LITERAL_CONST . OP_RELACIONAL LITERAL_CONST

    OP_RELACIONAL  shift, and go to state 52


state 43

   11 restante: SE ABRE_PAR cond . FECHA_PAR ENTAO restante FIMSE restante

    FECHA_PAR  shift, and go to state 53


state 44

   12 restante: ENQUANTO ABRE_PAR cond . FECHA_PAR FACA restante FIMENQUANTO restante

    FECHA_PAR  shift, and go to state 54


state 45

   10 restante: IDENTIFICADOR ATRIBUICAO NUMERO . PONTO_E_VIRG restante

    PONTO_E_VIRG  shift, and go to state 55


state 46

    9 restante: IDENTIFICADOR ATRIBUICAO LITERAL_CONST . PONTO_E_VIRG restante

    PONTO_E_VIRG  shift, and go to state 56


state 47

   14 restante: ESCREVA IDENTIFICADOR PONTO_E_VIRG restante .

    $default  reduce using rule 14 (restante)


state 48

   13 restante: ESCREVA LITERAL_CONST PONTO_E_VIRG restante .

    $default  reduce using rule 13 (restante)


state 49

   21 cond: LITERAL OP_RELACIONAL . IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 57


state 50

   17 cond: IDENTIFICADOR OP_RELACIONAL . IDENTIFICADOR
   22     | IDENTIFICADOR OP_RELACIONAL . NUMERO
   23     | IDENTIFICADOR OP_RELACIONAL . LITERAL_CONST

    IDENTIFICADOR  shift, and go to state 58
    NUMERO         shift, and go to state 59
    LITERAL_CONST  shift, and go to state 60


state 51

   18 cond: NUMERO OP_RELACIONAL . NUMERO
   20     | NUMERO OP_RELACIONAL . IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 61
    NUMERO         shift, and go to state 62


state 52

   19 cond: LITERAL_CONST OP_RELACIONAL . LITERAL_CONST

    LITERAL_CONST  shift, and go to state 63


state 53

   11 restante: SE ABRE_PAR cond FECHA_PAR . ENTAO restante FIMSE restante

    ENTAO  shift, and go to state 64


state 54

   12 restante: ENQUANTO ABRE_PAR cond FECHA_PAR . FACA restante FIMENQUANTO restante

    FACA  shift, and go to state 65


state 55

   10 restante: IDENTIFICADOR ATRIBUICAO NUMERO PONTO_E_VIRG . restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 66


state 56

    9 restante: IDENTIFICADOR ATRIBUICAO LITERAL_CONST PONTO_E_VIRG . restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 67


state 57

   21 cond: LITERAL OP_RELACIONAL IDENTIFICADOR .

    $default  reduce using rule 21 (cond)


state 58

   17 cond: IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR .

    $default  reduce using rule 17 (cond)


state 59

   22 cond: IDENTIFICADOR OP_RELACIONAL NUMERO .

    $default  reduce using rule 22 (cond)


state 60

   23 cond: IDENTIFICADOR OP_RELACIONAL LITERAL_CONST .

    $default  reduce using rule 23 (cond)


state 61

   20 cond: NUMERO OP_RELACIONAL IDENTIFICADOR .

    $default  reduce using rule 20 (cond)


state 62

   18 cond: NUMERO OP_RELACIONAL NUMERO .

    $default  reduce using rule 18 (cond)


state 63

   19 cond: LITERAL_CONST OP_RELACIONAL LITERAL_CONST .

    $default  reduce using rule 19 (cond)


state 64

   11 restante: SE ABRE_PAR cond FECHA_PAR ENTAO . restante FIMSE restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 68


state 65

   12 restante: ENQUANTO ABRE_PAR cond FECHA_PAR FACA . restante FIMENQUANTO restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 69


state 66

   10 restante: IDENTIFICADOR ATRIBUICAO NUMERO PONTO_E_VIRG restante .

    $default  reduce using rule 10 (restante)


state 67

    9 restante: IDENTIFICADOR ATRIBUICAO LITERAL_CONST PONTO_E_VIRG restante .

    $default  reduce using rule 9 (restante)


state 68

   11 restante: SE ABRE_PAR cond FECHA_PAR ENTAO restante . FIMSE restante

    FIMSE  shift, and go to state 70


state 69

   12 restante: ENQUANTO ABRE_PAR cond FECHA_PAR FACA restante . FIMENQUANTO restante

    FIMENQUANTO  shift, and go to state 71


state 70

   11 restante: SE ABRE_PAR cond FECHA_PAR ENTAO restante FIMSE . restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 72


state 71

   12 restante: ENQUANTO ABRE_PAR cond FECHA_PAR FACA restante FIMENQUANTO . restante

    FIMPROG        shift, and go to state 20
    ESCREVA        shift, and go to state 21
    SE             shift, and go to state 22
    ENQUANTO       shift, and go to state 23
    IDENTIFICADOR  shift, and go to state 24

    $default  reduce using rule 16 (restante)

    restante  go to state 73


state 72

   11 restante: SE ABRE_PAR cond FECHA_PAR ENTAO restante FIMSE restante .

    $default  reduce using rule 11 (restante)


state 73

   12 restante: ENQUANTO ABRE_PAR cond FECHA_PAR FACA restante FIMENQUANTO restante .

    $default  reduce using rule 12 (restante)
